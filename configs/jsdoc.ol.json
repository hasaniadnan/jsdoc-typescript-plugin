{
    "source": {
        "includePattern": ".+\\.js(doc)?$",
        "excludePattern": "(^|\\/|\\\\)_",
        "include": [
            "node_modules/openlayers/src",
            "node_modules/openlayers/externs/oli.js",
            "node_modules/openlayers/externs/olx.js"
        ]
    },
    "plugins": [
        "plugins/typescript",
        "node_modules/openlayers/config/jsdoc/api/plugins/inheritdoc",
        "node_modules/openlayers/config/jsdoc/api/plugins/typedefs",
        "node_modules/openlayers/config/jsdoc/api/plugins/events",
        "node_modules/openlayers/config/jsdoc/api/plugins/observable"
    ],
    "typescript": {
        "rootModuleName": "openlayers",
        "outDir": "./typings",
        "outputDocletDefs": false,
        "fillUndocumentedDoclets": true,
        "rewriteFunctionTypedefs": true,
        "ignoreTypes": [
            "ol.Color",
            "ol.Size",
            "ol.Pixel",
            "ol.Coordinate",
            "ol.TileCoord",
            "ol.Extent"
        ],
        "makePublic": [],
        "aliases": {
            "global": {
                "proj4": "any",
                "EsriJSONGeometry": "any",
                "GeoJSONFeature": "any",
                "GeoJSONFeatureCollection": "any",
                "GeoJSONGeometry": "any",
                "GeoJSONGeometryCollection": "any",
                "TileJSON": "any"
            },
            "module": {}
        },
        "interfaces": {},
        "typeReplacements": {
            "Image": "HTMLImageElement"
        },
        "publicAnnotation": "api",
        "defaultReturnType": "void",
        "headerFile": "./content/ol_header.ts",
        "footerFile": "./content/ol_footer.ts",
        "skipUndocumentedDoclets": false,
        "useUnionTypeForStringEnum": false,
        "dumpPublicTypesTo": "./typings/ol-public.json",
        "memberReplacements": {
            "ol.layer.VectorTile#getSource": {
                "description": "Return the associated source of the layer (NOTE: TypeScript currently prevents us from returning the intended type of ol.source.VectorTile, you will have to manually cast the returned value to this type)",
                "declaration": "getSource(): any;"
            }
        }
    },
    "templates": {
        "default": {
            "outputSourceFiles": true,
            "outputSourceReference": true
        }
    },
    "opts": {
        "recurse": true,
        "explain": false
    }
}